{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julius\\\\Desktop\\\\OJT\\\\OJT\\\\src\\\\Movie.js\";\nimport React, { Component } from \"react\";\nimport data from \"./data.json\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movie({\n  match\n}) {\n  const movie = data.find(data => data.slug === match.params.title);\n  let flag = true;\n\n  if (movie === undefined) {\n    flag = false;\n  }\n\n  console.log(flag);\n  return flag ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Movie\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Movie\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalidMovie\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Invalid Movie Title.. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Movie doesn't exist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["C:/Users/Julius/Desktop/OJT/OJT/src/Movie.js"],"names":["React","Component","data","Movie","match","movie","find","slug","params","title","flag","undefined","console","log","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,aAAP;;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA0B;AACxB,QAAMC,KAAK,GAAGH,IAAI,CAACI,IAAL,CAAWJ,IAAD,IAAUA,IAAI,CAACK,IAAL,KAAcH,KAAK,CAACI,MAAN,CAAaC,KAA/C,CAAd;AAEA,MAAIC,IAAI,GAAG,IAAX;;AACA,MAAIL,KAAK,KAAKM,SAAd,EAAyB;AACvBD,IAAAA,IAAI,GAAG,KAAP;AACD;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAOA,IAAI,gBACT;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACE;AAAA,gBAAKL,KAAK,CAACS;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADS,gBAKT;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UALF;AAYD;;KArBQX,K;AAuBT,eAAeA,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport data from \"./data.json\";\r\nimport \"./index.css\";\r\n\r\nfunction Movie({ match }) {\r\n  const movie = data.find((data) => data.slug === match.params.title);\r\n\r\n  let flag = true;\r\n  if (movie === undefined) {\r\n    flag = false;\r\n  }\r\n\r\n  console.log(flag);\r\n  return flag ? (\r\n    <div className=\"Movie\">\r\n      <h1>{movie.name}</h1>\r\n    </div>\r\n  ) : (\r\n    <div className=\"Movie\">\r\n      <div className=\"invalidMovie\">\r\n        <h2>Invalid Movie Title.. </h2>\r\n        <h2>Movie doesn't exist</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}